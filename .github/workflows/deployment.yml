name: Deployment

on: 
  push:
    branches:
      - main
      - development
      - staging
  pull_request:
    types: 
      - opened
    branches: 
      - "feature/**"
      - "bugfix/**"
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Get yarn cache directory
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      - name: Cache dependencies
        id: yarn-cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Install dependencies
        run: npm install -g yarn && yarn install --frozen-lockfile
      - name: Run lint
        run: yarn lint
      - name: Notify lint completion
        run: echo "Linting completed successfully!"
  
  build:
    needs: lint
    runs-on: ubuntu-latest
    outputs:
      build-file: ${{ steps.upload.outputs.build-files }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Install dependencies
        run: npm install -g yarn && yarn install --frozen-lockfile
      - name: Run build
        run: yarn build
      - name: Publish JS filenames
        id: upload
        run: find dist/assets/*.js -type f -execdir echo 'build-files={}' >> $GITHUB_OUTPUT ';'
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: dist
      - name: Notify build completion
        run: echo "Build completed successfully!"

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
      - name: Show build contents
        run: ls
      - name: Show build files
        run: echo "${{ needs.build.outputs.build-file }}"
      - name: Deploy to production
        run: echo "Deploying to production server..."
      - name: Notify deployment completion
        run: echo "Deployment completed successfully!"